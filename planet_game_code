import tkinter as tk
from PIL import Image, ImageTk
from tkinter import ttk
import random
import pygame
import os

pygame.mixer.init()

k = 0
stack2 = []
stack3 = []
stack4 = []
x = 0
mins = 0
sec_ten = 0
sec_one = 0
progress = 0

ASSET_PATH = os.path.join("assets", "images")

def asset(filename):
    return os.path.join(ASSET_PATH, filename)

def play_custom_sound(music):
    if music == 0:
        pygame.mixer.music.load(asset("nightsound.mp3"))
        pygame.mixer.music.play()
    elif music == 1:
        pygame.mixer.music.load(asset("stars taping.mp3"))
        pygame.mixer.music.play()
    elif music == 2:
        pygame.mixer.music.load(asset("winning.mp3"))
        pygame.mixer.music.play()
    elif music == 4:
        pygame.mixer.music.load(asset("low_battery-329310.mp3"))
        pygame.mixer.music.play()

def move_button():
    global k, mins, sec_ten, sec_one, times, progress
    button1 = tk.Button(canvas, image=times[mins], bg="black", borderwidth=0)
    button1.place(x=950, y=30)
    button2 = tk.Button(canvas, image=times[sec_ten], bg="black", borderwidth=0)
    button2.place(x=1000, y=30)
    button3 = tk.Button(canvas, image=times[sec_one], bg="black", borderwidth=0)
    button3.place(x=1050, y=30)

    if progress == 100:
        play_custom_sound(2)
        canvas.create_image(0, 0, anchor="nw", image=back_g1)
        end_win.place(x=300, y=100)
        return

    if sec_ten == 6 and sec_one == 0 and mins == 0:
        play_custom_sound(4)
        canvas.create_image(0, 0, anchor="nw", image=back_g1)
        end_lose.place(x=300, y=100)
        return

    if sec_ten == 6:
        mins += 1
        sec_one = -1
        sec_ten = 0

    if sec_one == 9:
        sec_one = -1
        sec_ten += 1

    sec_one += 1
    play_custom_sound(0)
    app.after(1000, move_button)

def path(i, j, btn, progress_bar):
    un_do = tk.Button(app, image=undo_img, command=lambda: undo(progress_bar))
    un_do.place(x=50, y=50)
    global x, progress
    if x == 11:
        return
    stack2.append([i, j])
    if check_progress() == 0:
        play_custom_sound(1)
        progress_bar['value'] = progress + 10
        progress += 10
    stack3.append(canvas.create_line(stack2[x - 1][0] + 25, stack2[x - 1][1] + 25,
                                     stack2[x][0] + 25, stack2[x][1] + 25, fill="yellow", width=2))
    x += 1

def undo(progress_bar):
    global x, mins, sec_ten, sec_one, progress
    if x == 0 or progress == 100 or (mins == 0 and sec_ten == 1 and sec_one == 0):
        return
    if check_progress() == 0:
        progress_bar['value'] = progress - 10
        progress -= 10
    stack2.pop()
    canvas.delete(stack3[-1])
    stack3.pop()
    x -= 1

def check_progress():
    for i in range(len(stack2)):
        if stack2[i] != stack4[i]:
            return -1
    return 0

app = tk.Tk()
app.title("Planetary Game")
app.geometry("1200x850")

canvas = tk.Canvas(app, width=1200, height=850)
canvas.place(x=0, y=0)

star_img = tk.PhotoImage(file=asset("star_sky.jpeg"))
star_img = star_img.subsample(2, 2)
undo_img = tk.PhotoImage(file=asset("prev_button.jpeg"))
undo_img = undo_img.subsample(4, 4)

one = tk.PhotoImage(file=asset("one_image.jpeg"))
one = one.subsample(3, 3)
two = tk.PhotoImage(file=asset("two_image.jpeg"))
two = two.subsample(3, 3)
three = tk.PhotoImage(file=asset("three_image.jpeg"))
three = three.subsample(3, 3)
four = tk.PhotoImage(file=asset("four_image.jpeg"))
four = four.subsample(3, 3)
five = tk.PhotoImage(file=asset("five_image.jpeg"))
five = five.subsample(3, 3)
six = tk.PhotoImage(file=asset("six_image.jpeg"))
six = six.subsample(3, 3)
seven = tk.PhotoImage(file=asset("seven_image.jpeg"))
seven = seven.subsample(3, 3)
eight = tk.PhotoImage(file=asset("eight_image.jpeg"))
eight = eight.subsample(3, 3)
nine = tk.PhotoImage(file=asset("nine_image.jpeg"))
nine = nine.subsample(3, 3)
zero = tk.PhotoImage(file=asset("zero_image.jpeg"))
zero = zero.subsample(2, 3)
times = [zero, one, two, three, four, five, six, seven, eight, nine]

back_g = Image.open(asset("night_background"))
back_g = back_g.resize((1200, 850))
back_g = ImageTk.PhotoImage(back_g)
back_g1 = Image.open(asset("morning_background"))
back_g1 = back_g1.resize((1200, 850))
back_g1 = ImageTk.PhotoImage(back_g1)

start_button_img = tk.PhotoImage(file=asset("start.png"))
lose_img = Image.open(asset("lose_star.jpeg"))
lose_img = lose_img.resize((600, 600))
lose_img = ImageTk.PhotoImage(lose_img)
win_img = Image.open(asset("win_star.jpeg"))
win_img = win_img.resize((600, 600))
win_img = ImageTk.PhotoImage(win_img)

canvas.create_image(0, 0, anchor="nw", image=back_g)
end_lose = tk.Button(app, image=lose_img)
end_win = tk.Button(app, image=win_img)

arr = [0] * 49
arr1 = list(range(49))
for _ in range(10):
    n = random.choice(arr1)
    arr[n] = 1
    arr1.remove(n)

def start(begin):
    begin.destroy()
    move_button()
    progress_bar = ttk.Progressbar(app, style="yellow.Horizontal.TProgressbar", length=200, mode='determinate')
    progress_bar['value'] = 0
    progress_bar.place(x=50, y=120)
    for i in range(7):
        for j in range(7):
            index = i * 7 + j
            if arr[index] == 1:
                x_pos = i * 70 + 100
                y_pos = j * 70 + 150
                stack4.append([x_pos, y_pos])
                stars = tk.Button(canvas, image=star_img, background="white")
                stars.place(x=x_pos, y=y_pos)
                stars.config(command=lambda i=x_pos, j=y_pos, stars=stars: path(i, j, stars, progress_bar))

begin = tk.Button(app, image=start_button_img, command=lambda: start(begin))
begin.place(x=500, y=750)

app.mainloop()
